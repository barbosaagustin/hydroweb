Video 3.5 Flexbox parte 1
Flexbox nos permite elegir un orden dirección, tamaño, posicionar elementos y adaptarlo a los dispositivos
Flex Container (padre) y Flex Item (hijos)

en css se define display:flex al Container.
flex-wrap:wrap acomoda los elementos uno abajo del otro para que no se te rompa la página
flex-flow nos permite añadir los valores de column y wrap en uno. 
flex-flow: column wrap;

Video 3.6 Flexbox parte 2
con justify-content alineamos de manera horizontal. tambien podemos separarlos con space-around, space-between, sino con margin y padding

Con order podemos mover elementos dentro de containers
align-items para alineacion vertical
aling-self: te ordena los felx items, a uno solo en particular



Video Grid 4.1
section>div.grid-item*9
Grid Container y Grids items, como con flex

grid-template-rows: repeat(4,150px)

sino grid-template-rows: 150px 150px 150px 150px

grid-template-columns: lo mismo que con las rows

como medida relativas, se usan fracciones en grid, es como el porcentaje nomas, no es mucha ciencia. pero pones por ejemplo:
grid-template-columns: 1fr 1fr 1fr;

Video 4.2 items de una grilla
class grid-item first-item
grid-column: 1/3; le digo empeza en la linea 1 termina en la linea 3, y ahi parece que ocupa dos columnas
lo mismo con las filas
grid-row: 1/4; y ahi el item 1 ocupa tres filas el forro je

Esto se podria usar para acomodar bien el header y e footer!!!

Video Grids 4.3 areas
grid-template-areas: 
'nav header header'
'nav productos aside'
'nav servicios aside'
'footer footer footer';

header {
    grid-area:header;
}

#productos{
    grid-area:productos
}
Grids lo vamos a utilizar mas para la parte esttructural de nuestro proyecto.

Video Grids distribucion de los elementos 4.4
justify-content: center //horizontal
align-items: center //vertical
row-gap: 10px te genera un espacio entre las filas
column-gap: te genera un espacio entre las columnas

Para solo un elemento:
justify-self:
align-self:


Video 4.5 Diseño responsive para todos los dispositivos
media querys:
@media only screen and (max-width: 500px) {

    //todos los estilos que se implementarán que estén cumpliendo la condición
}
adentro de la media query tnes que poner los estilos que queres que cambie unicamente, por ejemplo en movile no queres msotrar un video entonces 
le pones a ese video display none por ejemplo.

Video Mobile First 4.6 
ok ja

Video 4.7 Vamos a combinarlo todo
Siempre que uses imagenes primero ajustar el ancho y alto de las mismas ya que en grid no se ajustan automaticamente.
le pones un 
img {
    ancho: 100%
    alto: 100%
}

Video 5.1 Pseudoclases y Bootstrap!!
:link
.nombre-de-clase:hover {
    color: eldetubieja
}
:visited
div:not(.nombre-de-clase-que-no-queremos-q-se-aplique-el-estilo o el id o el numero de elemento) {
    propiredaes que no queremos que se le aplique.
}
div:nth-child(2){
    color: blue;
}

Video 5.2 Concoiendo Bootstrap

Video 5.3 Instalando Bootstrap
usar el link papu, la de cdn, está en la pagina oficial: getbootstrap en la parte de docs

Video 5.4 Bootstrap esttructura
Container y container fluid --> base estructural
container row columns
Utilizar los breakpoints!!! 
por ejemplo: col-sm-12 col-md-8 col-lg-6 // col-sm-12 col-md-4 col-lg-6, cosa de que cuando pongas mobile ocupe toda la fila
siempre llegar a 12!!

Video 5.5 Utilizando sus elementos
Vas a la documentacion oficial y ves alli ej
El navbar se ver furioso, encima hace todo responsive
Recordar los dos scripts, el del css en el head (arriba de nuestros estilos) y el de js al finaldel body

Viideo 5.6 BEM
bloquee__element 
bloque__element--modifier


git log --oneline
git checkout commitID
git branch -l para listar las ramas, sin el -l creas una.
git checkout nombreDeRama para cambiar de ramas
git branch -D nombreRama para borrar una rama que ya mergeaste y q no tiene sentido q sigas teniendo